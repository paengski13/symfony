{% extends 'base.html.twig' %}
{% block title %}Rafael Torres{% endblock %}

{% block content %}
    <!-- Main content -->
    <section class="content">
        <div class="row">
            <div class="col-md-5">
                <div class="form-group">
                    <label>Server Name</label>
                    <select name='server' class="form-control">
                    </select>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="box">
                    <div class="box-header with-border">
                        <h3 class="box-title">Servers</h3>
                        <!-- /.box-header -->
                        <div class="box-body">
                            <div class="row">
                                <p class="text-center">
                                    <strong><label id="server_name"></label></strong>
                                </p>

                                <div class="chart">
                                    <!-- Sales Chart Canvas -->
                                    <canvas id="salesChart" style="height: 180px;"></canvas>
                                </div>
                                <!-- /.chart-responsive -->
                            </div>
                            <!-- /.row -->
                        </div>
                        <!-- ./box-body -->

                    </div>
                    <!-- /.box -->
                </div>
                <!-- /.col -->
            </div>
        </div>
        <!-- /.row -->
    </section>
    <!-- /.content -->
{% endblock %}

{% block custom_javascripts %}
<script>
    $(document).ready(function () {
        $.ajax({
            method: 'GET',
            url: '/api/servers',
            data: {},
            success: function (data) {
                var listitems = '<option>-- Select --</option>';
                $.each(JSON.parse(data), function (key, value) {
                    listitems += '<option value=' + value.server + '>' + value.server + '</option>';
                });
                $('select[name=server]').empty().append(listitems);
            },
            error: function (response) {
                console.log(response);
            }
        });

        $('select[name=server]').change(function () {
            var name =  $('select[name=server]').val();
            $("#server_name").html(name);
            $.ajax({
                method: 'GET',
                url: '/api/server/' + name,
                data: {},
                success: function (data) {
                    var labels = [];
                    var values = [];
                    $.each(JSON.parse(data), function (key, value) {
                        labels.push(value.label);
                        values.push(value.value);
                    });

                    // Get context with jQuery - using jQuery's .get() method.
                    var salesChartCanvas = $("#salesChart").get(0).getContext("2d");
                    // This will get the first returned node in the jQuery collection.
                    var salesChart = new Chart(salesChartCanvas);

                    var salesChartData = {
                        labels: labels,
                        datasets: [
                            {
                                label: "Statistics",
                                fillColor: "rgb(210, 214, 222)",
                                strokeColor: "rgb(210, 214, 222)",
                                pointColor: "rgb(210, 214, 222)",
                                pointStrokeColor: "#c1c7d1",
                                pointHighlightFill: "#fff",
                                pointHighlightStroke: "rgb(220,220,220)",
                                data: values
                            },
                        ]
                    };

                    var salesChartOptions = {
                        //Boolean - If we should show the scale at all
                        showScale: true,
                        //Boolean - Whether grid lines are shown across the chart
                        scaleShowGridLines: false,
                        //String - Colour of the grid lines
                        scaleGridLineColor: "rgba(0,0,0,.05)",
                        //Number - Width of the grid lines
                        scaleGridLineWidth: 1,
                        //Boolean - Whether to show horizontal lines (except X axis)
                        scaleShowHorizontalLines: true,
                        //Boolean - Whether to show vertical lines (except Y axis)
                        scaleShowVerticalLines: true,
                        //Boolean - Whether the line is curved between points
                        bezierCurve: true,
                        //Number - Tension of the bezier curve between points
                        bezierCurveTension: 0.3,
                        //Boolean - Whether to show a dot for each point
                        pointDot: false,
                        //Number - Radius of each point dot in pixels
                        pointDotRadius: 4,
                        //Number - Pixel width of point dot stroke
                        pointDotStrokeWidth: 1,
                        //Number - amount extra to add to the radius to cater for hit detection outside the drawn point
                        pointHitDetectionRadius: 20,
                        //Boolean - Whether to show a stroke for datasets
                        datasetStroke: true,
                        //Number - Pixel width of dataset stroke
                        datasetStrokeWidth: 2,
                        //Boolean - Whether to fill the dataset with a color
                        datasetFill: true,
                        //String - A legend template
                        //Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
                        maintainAspectRatio: true,
                        //Boolean - whether to make the chart responsive to window resizing
                        responsive: true
                    };

                    //Create the line chart
                    salesChart.Line(salesChartData, salesChartOptions);
                },
                error: function (response) {
                    console.log(response);
                }
            });
        });
    });
</script>
{% endblock %}